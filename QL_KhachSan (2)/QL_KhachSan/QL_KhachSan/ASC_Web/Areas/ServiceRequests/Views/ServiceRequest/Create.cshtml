@model ASC_Web.Areas.ServiceRequests.Models.CreateServiceRequestViewModel
@{
    ViewData["Title"] = "Tạo Yêu cầu Dịch vụ Mới";
    Layout = "_SecureLayout";
}

<style>
    /* CSS giữ nguyên như phản hồi trước của tôi cho trang này */
    /* --- General Card & Form Structure --- */
    .card .card-content .card-title-section {
        display: flex;
        align-items: center;
        font-size: 1.5rem;
        color: #37474f;
        margin-bottom: 25px;
        padding-bottom: 10px;
        border-bottom: 1px solid rgba(0,0,0,0.1);
    }

        .card .card-content .card-title-section .material-icons {
            margin-right: 12px;
            font-size: 1.9rem;
        }

    .input-field {
        margin-bottom: 1.8rem !important;
    }

    .select-wrapper + .helper-text {
        margin-top: -12px;
        margin-bottom: 10px;
    }

    input[type="text"].datepicker:not(:placeholder-shown) + label,
    input[type="text"].datepicker:focus + label,
    input[type="text"].timepicker:not(:placeholder-shown) + label,
    input[type="text"].timepicker:focus + label {
        transform: translateY(-14px) scale(0.8);
        transform-origin: 0 0;
    }

    .input-field label.active {
        transform: translateY(-14px) scale(0.8);
        transform-origin: 0 0;
    }

    .card .card-action {
        padding: 16px 24px;
        border-top: 1px solid rgba(160,160,160,0.2);
    }

        .card .card-action .btn {
            margin-left: 10px;
        }

            .card .card-action .btn:first-child {
                margin-left: 0;
            }

    .validation-summary-panel-custom {
        margin-bottom: 25px;
        padding: 15px;
        border-left: 5px solid #c62828;
        background-color: #ffcdd2;
        border-radius: 3px;
    }

    .validation-summary-title {
        font-size: 1.1rem;
        display: block;
        margin-bottom: 10px;
        color: #c62828;
        font-weight: 500;
    }

    .validation-summary-errors-custom ul {
        margin: 5px 0 0 15px;
        padding-left: 0;
        list-style-type: disc;
        color: #b71c1c;
    }

    .validation-summary-errors-custom li {
        font-size: 0.9rem;
        margin-bottom: 3px;
    }

    @@media (max-width: 600px) {
        .card .card-action {
            text-align: center;
        }

            .card .card-action .btn {
                display: block;
                width: calc(100% - 10px);
                margin: 8px auto !important;
            }

        .card .card-content .card-title-section {
            font-size: 1.3rem;
        }

            .card .card-content .card-title-section .material-icons {
                font-size: 1.7rem;
            }

        .input-field.col.s12.m6 {
            width: 100%;
            margin-left: auto;
            left: auto;
            right: auto;
        }
    }
</style>

<div class="container" style="margin-top:25px; width: 90%; max-width: 1100px;">
    <h4 class="blue-grey-text text-darken-3">@ViewData["Title"]</h4>
    <div class="divider" style="margin-bottom: 30px;"></div>

    <div class="card z-depth-1 hoverable">
        <form asp-action="Create" method="post" id="createServiceRequestForm">
            @Html.AntiForgeryToken()
            <div class="card-content">
                <div class="card-title-section">
                    <i class="material-icons">playlist_add_check</i>
                    <span>Nhập thông tin yêu cầu dịch vụ</span>
                </div>

                @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
                {
                    <div class="validation-summary-panel-custom">
                        <span class="validation-summary-title">Vui lòng kiểm tra lại các mục sau:</span>
                        <div asp-validation-summary="All" class="validation-summary-errors-custom"></div>
                    </div>
                }

                <div class="row" style="margin-bottom:0;">
                    <div class="input-field col s12">
                        <i class="material-icons prefix">room_service</i>
                        <select asp-for="SelectedMasterDataValueId" asp-items="Model.AllAvailableServices" id="ddlAvailableServices" class="validate" required>
                            <option value="" disabled selected>-- Chọn Dịch vụ --</option>
                        </select>
                        <label for="ddlAvailableServices">Dịch vụ <span class="red-text">*</span></label>
                        @* --- SỬA Ở ĐÂY --- *@
                        <span asp-validation-for="SelectedMasterDataValueId" class="helper-text red-text"></span>
                    </div>
                </div>

                <div class="row" style="margin-bottom:0;">
                    <div class="input-field col s12 m6">
                        <i class="material-icons prefix">date_range</i>
                        <input asp-for="RequestedDate" type="text" class="datepicker validate" id="RequestedDate" required />
                        <label asp-for="RequestedDate">Ngày Yêu cầu <span class="red-text">*</span></label>
                        @* --- SỬA Ở ĐÂY --- *@
                        <span asp-validation-for="RequestedDate" class="helper-text red-text"></span>
                    </div>
                    <div class="input-field col s12 m6">
                        <i class="material-icons prefix">event_busy</i>
                        <input asp-for="RequestedEndDate" type="text" class="datepicker" id="RequestedEndDate" />
                        <label asp-for="RequestedEndDate">Ngày Kết thúc (Nếu có)</label>
                        @* --- SỬA Ở ĐÂY --- *@
                        <span asp-validation-for="RequestedEndDate" class="helper-text red-text"></span>
                    </div>
                </div>

                <div class="row" style="margin-bottom:0;">
                    <div class="input-field col s12">
                        <i class="material-icons prefix">notes</i>
                        <textarea asp-for="RequestedServicesDetails" id="requestedServicesDetails" class="materialize-textarea" data-length="500"></textarea>
                        <label asp-for="RequestedServicesDetails">Chi tiết Yêu cầu/Ghi chú</label>
                        @* --- SỬA Ở ĐÂY --- *@
                        <span asp-validation-for="RequestedServicesDetails" class="helper-text red-text"></span>
                    </div>
                </div>
            </div>

            <div class="card-action right-align">
                <a asp-action="MyRequests" asp-controller="ServiceRequest" asp-area="ServiceRequests" class="btn waves-effect waves-grey grey lighten-2 black-text tooltipped" data-position="top" data-tooltip="Hủy và xem danh sách yêu cầu">
                    <i class="material-icons left">cancel</i>Hủy
                </a>
                <button class="btn waves-effect waves-light indigo darken-1 tooltipped" type="submit" data-position="top" data-tooltip="Gửi yêu cầu dịch vụ">
                    Gửi Yêu Cầu
                    <i class="material-icons right">send</i>
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // JavaScript giữ nguyên như phản hồi trước của tôi cho trang này
        document.addEventListener('DOMContentLoaded', function () {
            M.AutoInit();

            var requestedServicesDetailsTextarea = document.getElementById('requestedServicesDetails');
            if (requestedServicesDetailsTextarea) {
                 M.textareaAutoResize(requestedServicesDetailsTextarea);
                 M.CharacterCounter.init(requestedServicesDetailsTextarea);
            }

            var selects = document.querySelectorAll('select');
            M.FormSelect.init(selects, {});

            var minDateToday = new Date();
            minDateToday.setHours(0, 0, 0, 0);

            var datePickerOptions = {
                format: 'dd/mm/yyyy', autoClose: true, showClearBtn: true, minDate: minDateToday,
                i18n: {
                    cancel: 'Hủy', clear: 'Xóa', done: 'Chọn',
                    months: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                    monthsShort: ['Th1', 'Th2', 'Th3', 'Th4', 'Th5', 'Th6', 'Th7', 'Th8', 'Th9', 'Th10', 'Th11', 'Th12'],
                    weekdays: ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'],
                    weekdaysShort: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7'],
                    weekdaysAbbrev: ['CN', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7']
                }
            };

            var requestedDateElem = document.getElementById('RequestedDate');
            if (requestedDateElem) {
                M.Datepicker.init(requestedDateElem, {
                    ...datePickerOptions,
                    onSelect: function(selectedDate) {
                        var requestedEndDateElem = document.getElementById('RequestedEndDate');
                        if (requestedEndDateElem) {
                            var requestedEndDateInstance = M.Datepicker.getInstance(requestedEndDateElem);
                            if (requestedEndDateInstance) {
                                requestedEndDateInstance.options.minDate = selectedDate;
                                if (requestedEndDateInstance.date && requestedEndDateInstance.date < selectedDate) {
                                    requestedEndDateInstance.setDate(null);
                                    requestedEndDateInstance.el.value = '';
                                }
                            }
                        }
                    }
                });
            }

            var requestedEndDateElem = document.getElementById('RequestedEndDate');
            if (requestedEndDateElem) {
                M.Datepicker.init(requestedEndDateElem, {
                    ...datePickerOptions,
                    onOpen: function() {
                        var reqDateElem = document.getElementById('RequestedDate');
                        if (reqDateElem) {
                            var reqDateInstance = M.Datepicker.getInstance(reqDateElem);
                            if (reqDateInstance && reqDateInstance.date) {
                                 this.options.minDate = reqDateInstance.date;
                            }
                        }
                    }
                });
            }

            var tempDataMessages = document.querySelectorAll('.card-panel.green, .card-panel.red');
            if (tempDataMessages.length > 0) {
                setTimeout(function() {
                    tempDataMessages.forEach(function(msg) {
                        msg.style.transition = 'opacity 0.5s ease';
                        msg.style.opacity = '0';
                        setTimeout(function() { msg.remove(); }, 500);
                    });
                }, 4000);
            }

            var validationSummary = document.querySelector('.validation-summary-panel-custom');
            if (validationSummary && (validationSummary.innerText.trim() !== "" || validationSummary.querySelectorAll('li').length > 0) ) {
                  var cardTitleSpan = document.querySelector('#createServiceRequestForm .card-title-section span');
                  if (cardTitleSpan && !cardTitleSpan.querySelector('.error-indicator')) {
                      var errorIndicator = document.createElement('small');
                      errorIndicator.className = 'red-text text-darken-2 error-indicator';
                      errorIndicator.style.fontSize = '0.8em';
                      errorIndicator.style.marginLeft = '8px';
                      errorIndicator.textContent = '(Có lỗi)';
                      cardTitleSpan.appendChild(errorIndicator);
                  }
                  var firstErrorField = document.querySelector('.input-field .helper-text.red-text:not(:empty)');
                  if(firstErrorField){
                      firstErrorField.closest('.input-field').scrollIntoView({ behavior: 'smooth', block: 'center' });
                  } else {
                      validationSummary.scrollIntoView({ behavior: 'smooth', block: 'center' });
                  }
            }
        });
    </script>
}