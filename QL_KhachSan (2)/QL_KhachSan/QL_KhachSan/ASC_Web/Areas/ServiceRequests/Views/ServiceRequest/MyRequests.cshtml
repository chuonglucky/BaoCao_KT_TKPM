@using ASC.Model.Models
@model IEnumerable<ASC_Web.Areas.ServiceRequests.Models.ServiceRequestDetailsViewModel>

@{
    ViewData["Title"] = "Yêu cầu Dịch vụ của Tôi";
    Layout = "_SecureLayout";
}

<style>
    /* --- General Page & Card Structure --- */
    .card .card-content .card-title-section {
        display: flex;
        justify-content: space-between; /* For title and button */
        align-items: center;
        margin-bottom: 20px;
    }

        .card .card-content .card-title-section .card-title {
            margin: 0; /* Remove default margin from h5/span if used */
            font-size: 1.6rem;
            display: flex;
            align-items: center;
        }

            .card .card-content .card-title-section .card-title .material-icons {
                margin-right: 10px;
                font-size: 1.9rem;
            }

    .card .card-content .btn-create-new {
        margin-top: 0; /* Adjust if needed */
    }


    /* CSS cho status-box */
    .status-box {
        padding: 4px 10px;
        border-radius: 3px;
        color: white !important;
        text-align: center;
        line-height: 1.3;
        display: inline-block;
        min-width: 120px; /* Điều chỉnh cho phù hợp với text trạng thái dài hơn */
        font-size: 0.82rem;
        font-weight: 500;
        white-space: nowrap;
        margin: 0;
        text-transform: capitalize;
    }

    .status-box-pending {
        background-color: #ffa726 !important;
        color: #000 !important;
    }
    /* Chờ xác nhận - Orange */
    .status-box-confirmed {
        background-color: #43a047 !important;
    }
    /* Đã xác nhận - Green Darken-1 */
    .status-box-processing {
        background-color: #1e88e5 !important;
    }
    /* Đang xử lý - Blue Darken-1 */
    .status-box-completed {
        background-color: #00695c !important;
    }
    /* Hoàn thành - Teal Darken-3 */
    .status-box-rejected {
        background-color: #e53935 !important;
    }
    /* Bị từ chối - Red Darken-1 */
    .status-box-cancelled {
        background-color: #757575 !important;
    }
    /* Đã hủy - Grey Darken-1 */
    .status-box-unknown {
        background-color: #9e9e9e !important;
    }
    /* Khác - Grey */

    /* CSS cho bảng và responsive */
    .responsive-table-wrapper {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .responsive-table {
        width: 100%;
    }

        .responsive-table th,
        .responsive-table td {
            vertical-align: middle;
            padding: 10px 8px;
            font-size: 0.9rem;
            white-space: normal;
            word-break: break-word;
        }

        .responsive-table thead tr { /* Bỏ background thead mặc định nếu có */
            border-bottom: 2px solid #cfd8dc; /* blue-grey lighten-4, hoặc 1px solid #90a4ae */
        }

        .responsive-table th {
            font-weight: 500;
            color: #37474f; /* blue-grey darken-3 */
        }
            /* Cột có thể cần nowrap trên desktop */
            .responsive-table th.col-date, .responsive-table td.col-date,
            .responsive-table th.col-type, .responsive-table td.col-type { /* Cho loại DV, chi tiết */
                white-space: nowrap;
            }

            .responsive-table th.actions-header,
            .responsive-table td.actions-cell {
                min-width: 100px; /* Đủ cho 2 nút nhỏ */
                text-align: center !important;
                white-space: nowrap;
            }

                .responsive-table td.actions-cell .btn-floating.btn-small {
                    margin: 0 3px;
                }

    /* TempData panels */
    .tempdata-panel {
        margin: 15px 0;
        padding: 12px 15px;
        border-left-width: 4px;
        border-left-style: solid;
        display: flex;
        align-items: center;
        cursor: pointer;
    }

        .tempdata-panel .material-icons {
            margin-right: 10px;
        }

        .tempdata-panel.green {
            border-color: #388e3c;
        }

        .tempdata-panel.red {
            border-color: #c62828;
        }

    /* DataTables Integration */
    div.dataTables_wrapper div.dataTables_length select {
        width: auto;
        display: inline-block;
        height: auto;
        padding: 5px 10px;
        border: 1px solid #9e9e9e;
        background-color: white;
        border-radius: 3px;
    }

    div.dataTables_wrapper div.dataTables_filter input {
        border: 1px solid #9e9e9e;
        padding: 5px 8px;
        border-radius: 3px;
        margin-left: 0.5em;
        height: auto;
    }

    .dataTables_info, .dataTables_paginate {
        padding-top: 1em;
    }


    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .responsive-table th.col-date, .responsive-table td.col-date,
        .responsive-table th.col-type, .responsive-table td.col-type {
            white-space: normal;
        }

        .responsive-table th, .responsive-table td {
            font-size: 0.85rem;
            padding: 8px 5px;
        }

        .card .card-content .card-title-section .card-title {
            font-size: 1.4rem;
        }

            .card .card-content .card-title-section .card-title .material-icons {
                font-size: 1.7rem;
            }

        .card .card-content .card-title-section .btn-create-new {
            width: 100%;
            margin-top: 10px;
        }
    }

    @@media (max-width: 600px) {
        .status-box {
            min-width: 100px;
            font-size: 0.78rem;
            padding: 3px 6px;
        }
    }

</style>

<div class="container" style="margin-top:25px; width: 95%; max-width: 1800px;">
    <h4 class="blue-grey-text text-darken-3">@ViewData["Title"]</h4>
    <p class="grey-text text-darken-1" style="margin-bottom:15px;">Dưới đây là danh sách các yêu cầu dịch vụ bạn đã gửi.</p>
    <div class="divider" style="margin-bottom: 25px;"></div>

    <div class="card z-depth-1">
        <div class="card-content">
            <div class="card-title-section">
                <span class="card-title grey-text text-darken-2">
                    <i class="material-icons">assignment</i>Danh sách yêu cầu
                </span>
                <a asp-action="Create" class="btn waves-effect waves-light indigo darken-1 btn-create-new tooltipped" data-position="top" data-tooltip="Tạo một yêu cầu dịch vụ mới">
                    <i class="material-icons left">add_circle_outline</i>Tạo Yêu cầu Mới
                </a>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="card-panel green lighten-4 green-text text-darken-3 tempdata-panel green" onclick="this.style.display='none';">
                    <i class="material-icons">check_circle</i>@Html.Raw(TempData["SuccessMessage"])
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="card-panel red lighten-4 red-text text-darken-3 tempdata-panel red" onclick="this.style.display='none';">
                    <i class="material-icons">error_outline</i>@Html.Raw(TempData["ErrorMessage"])
                </div>
            }

            @if (Model != null && Model.Any())
            {
                <div class="responsive-table-wrapper">
                    <table class="highlight responsive-table striped" id="tblMyRequests">
                        @* Thêm striped, bỏ bordered *@
                        <thead>
                            <tr>
                                <th class="col-type">Loại Dịch vụ</th>
                                <th class="col-type">Chi tiết</th>
                                <th class="col-date">Ngày Yêu cầu</th>
                                <th class="col-date">Ngày Mong muốn</th>
                                <th class="center-align">Trạng thái</th>
                                <th class="center-align actions-header" style="width: 100px;">Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderByDescending(r => r.CreatedDate))
                            {
                                <tr>
                                    <td class="col-type">@Html.DisplayFor(modelItem => item.ServiceKeyName)</td>
                                    <td class="col-type">@Html.DisplayFor(modelItem => item.ServiceValueName)</td>
                                    <td class="col-date">@item.CreatedDate.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td class="col-date">
                                        @item.RequestedDate.ToString("dd/MM/yyyy")
                                        @if (item.RequestedEndDate.HasValue)
                                        {
                                            <text> - @item.RequestedEndDate.Value.ToString("dd/MM/yyyy")</text>
                                        }
                                    </td>
                                    <td class="center-align">
                                        @{
                                            string statusBoxClass = "status-box-unknown";
                                            string statusText = item.Status;
                                            switch (item.Status)
                                            {
                                                case ServiceRequest.Statuses.PendingConfirmation: statusBoxClass = "status-box-pending"; statusText = "Chờ xác nhận"; break;
                                                case ServiceRequest.Statuses.Confirmed: statusBoxClass = "status-box-confirmed"; statusText = "Đã xác nhận"; break;
                                                case ServiceRequest.Statuses.Processing: statusBoxClass = "status-box-processing"; statusText = "Đang xử lý"; break;
                                                case ServiceRequest.Statuses.Completed: statusBoxClass = "status-box-completed"; statusText = "Hoàn thành"; break;
                                                case ServiceRequest.Statuses.Rejected: statusBoxClass = "status-box-rejected"; statusText = "Bị từ chối"; break;
                                                case ServiceRequest.Statuses.CancelledByStaff:
                                                case ServiceRequest.Statuses.CancelledByGuest:
                                                    statusBoxClass = "status-box-cancelled"; statusText = "Đã hủy"; break;
                                                default: statusText = $"Không rõ ({item.Status})"; break;
                                            }
                                        }
                                        <div class="status-box @statusBoxClass tooltipped" data-position="top" data-tooltip="@statusText">@statusText</div>
                                    </td>
                                    <td class="center-align actions-cell">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn-floating btn-small waves-effect waves-light blue lighten-1 tooltipped" data-position="top" data-tooltip="Xem Chi tiết Yêu cầu">
                                            <i class="material-icons">visibility</i>
                                        </a>
                                        @if (item.Status == ServiceRequest.Statuses.PendingConfirmation)
                                        {
                                            <form asp-action="CancelByUser" asp-route-id="@item.Id" method="post" style="display:inline;" onsubmit="return confirm('Bạn có chắc chắn muốn hủy yêu cầu dịch vụ này?');">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn-floating btn-small waves-effect waves-light red lighten-1 tooltipped" data-position="top" data-tooltip="Hủy Yêu cầu">
                                                    <i class="material-icons">cancel</i>
                                                </button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="card-panel blue-grey lighten-5 grey-text text-darken-1 center-align" style="padding: 30px; margin-top:20px;">
                    <i class="material-icons large" style="color: #90a4ae;">playlist_add_check</i>
                    <p class="flow-text" style="margin-top:10px;">Bạn chưa có yêu cầu dịch vụ nào.</p>
                    <p>Nhấn nút "Tạo Yêu cầu Mới" ở trên để bắt đầu.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            M.AutoInit(); // Khởi tạo tooltips và các component Materialize khác

            if ($('#tblMyRequests tbody tr').length > 0) {
                $('#tblMyRequests').DataTable({
                    'pageLength': 10,
                    'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, 'Tất cả']],
                    "language": { /* Giữ nguyên language config */
                        "lengthMenu": "Hiển thị _MENU_ mục",
                        "zeroRecords": "Không tìm thấy yêu cầu nào",
                        "info": "Hiển thị trang _PAGE_ trên _PAGES_ (_TOTAL_ mục)",
                        "infoEmpty": "Không có mục nào",
                        "infoFiltered": "(lọc từ _MAX_ tổng số mục)",
                        "search": "Tìm kiếm:",
                        "paginate": { "first": "Đầu", "last": "Cuối", "next": "Tiếp", "previous": "Trước" }
                    },
                    "columnDefs": [
                        { "orderable": false, "targets": -1 } /* Cột cuối (Hành động) không sắp xếp */
                    ],
                    responsive: true,
                    "order": [[2, "desc"]], // Sắp xếp theo Ngày Yêu cầu (cột thứ 3, index 2) giảm dần
                    "drawCallback": function( settings ) {
                        $('.tooltipped').tooltip({ exitDelay: 50 }); // Re-init tooltips
                    },
                     "initComplete": function(settings, json) {
                        $('div.dataTables_wrapper div.dataTables_length select').addClass('browser-default');
                        $('div.dataTables_wrapper div.dataTables_filter input[type="search"]').css({ 'height': 'auto', 'margin-left': '0.5em' });
                    }
                });
            }

            // Auto-hide TempData messages
            setTimeout(function() {
                $('.tempdata-panel').fadeOut('slow', function() { $(this).remove(); });
            }, 3500);
        });
    </script>
}