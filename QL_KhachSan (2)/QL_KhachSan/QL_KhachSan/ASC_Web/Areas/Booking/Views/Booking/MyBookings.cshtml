@model IEnumerable<ASC.Model.Models.Booking>

@{
    Layout = "_SecureLayout";
    ViewData["Title"] = "Các yêu cầu đặt phòng của tôi";
}

<style>
    /* CSS cho status-box (tương tự các trang trước) */
    .status-box {
        padding: 6px 8px;
        border-radius: 3px;
        color: white;
        text-align: center;
        line-height: 1.2;
        display: inline-block;
        min-width: 110px;
        font-size: 0.85em;
        font-weight: 500;
        white-space: nowrap;
    }

    .status-box-confirmed {
        background-color: #66bb6a; /* green lighten-1 */
    }

    .status-box-pendingapproval {
        background-color: #ffa726; /* orange lighten-1 */
        color: #000 !important;
    }

    .status-box-rejected {
        background-color: #ef5350; /* red lighten-1 */
    }

    .status-box-cancelled {
        background-color: #757575; /* grey darken-1 */
    }

    .status-box-checkedin {
        background-color: #29b6f6; /* light-blue lighten-1 */
        color: #000 !important;
    }

    .status-box-checkedout {
        background-color: #eeeeee; /* grey lighten-3 */
        color: #424242 !important;
        border: 1px solid #bdbdbd;
    }

    .status-box-unknown {
        background-color: #9e9e9e; /* grey */
    }
    /* Trạng thái mặc định/không xác định */

    /* CSS cho bảng và responsive (tương tự các trang trước) */
    .responsive-table-wrapper {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .responsive-table {
        width: 100%;
    }

        .responsive-table th,
        .responsive-table td {
            vertical-align: middle;
            padding: 10px 6px;
            font-size: 0.88rem;
            white-space: normal;
            word-break: break-word;
        }

            /* Cột có thể cần nowrap trên desktop nếu đủ chỗ */
            .responsive-table th.col-date,
            .responsive-table td.col-date,
            .responsive-table th.col-room,
            .responsive-table td.col-room {
                white-space: nowrap;
            }

            .responsive-table th.actions-header,
            .responsive-table td.actions-cell {
                min-width: 100px; /* Đủ cho 1 nút "Hủy" */
                text-align: center;
                white-space: nowrap;
            }

                .responsive-table td.actions-cell .btn {
                    margin: 0 2px;
                    padding: 0 8px;
                }

                    .responsive-table td.actions-cell .btn .material-icons {
                        font-size: 1rem;
                        margin-right: 3px !important;
                        line-height: inherit;
                    }

    .table-title-and-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        flex-wrap: wrap;
    }

        .table-title-and-actions .card-title {
            margin: 0;
            margin-right: 10px;
            display: flex;
            align-items: center;
            font-size: 1.4rem;
        }

            .table-title-and-actions .card-title .material-icons {
                margin-right: 8px;
                font-size: 1.7rem;
            }

    /* Responsive adjustments */
    @@media (max-width: 992px) {
        .responsive-table th.actions-header,
        .responsive-table td.actions-cell {
            min-width: 90px;
        }

        .responsive-table th, .responsive-table td {
            font-size: 0.85rem;
            padding: 8px 5px;
        }
    }

    @@media (max-width: 768px) {
        .responsive-table th.col-date,
        .responsive-table td.col-date,
        .responsive-table th.col-room,
        .responsive-table td.col-room {
            white-space: normal;
        }

        .responsive-table td.actions-cell {
            min-width: auto;
            white-space: normal;
        }

            .responsive-table td.actions-cell .btn {
                margin: 4px auto;
                display: block;
                width: calc(100% - 8px);
                max-width: 130px;
                font-size: 0.8rem;
            }
    }

    @@media (max-width: 480px) { /* Small phones */
        .responsive-table th, .responsive-table td {
            font-size: 0.8rem;
            padding: 6px 4px;
        }

        .table-title-and-actions .card-title {
            font-size: 1.2rem;
        }

            .table-title-and-actions .card-title .material-icons {
                font-size: 1.5rem;
            }

        .responsive-table td.actions-cell .btn .material-icons {
            /* Có thể ẩn icon nếu quá chật */
            /* display: none; */
        }
    }
</style>

<div class="container" style="margin-top:20px; width: 95%; max-width: 1800px;">
    <h4 class="blue-grey-text text-darken-2">@ViewData["Title"]</h4>
    <div class="divider" style="margin-bottom: 25px;"></div>

    <div class="row" style="margin-top:15px;">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="col s12">
                <div class="card-panel teal lighten-2 white-text z-depth-1" onclick="this.style.display='none'" style="cursor:pointer;">
                    <i class="material-icons left tiny">check_circle</i>@Html.Raw(TempData["SuccessMessage"])
                </div>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="col s12">
                <div class="card-panel red lighten-2 white-text z-depth-1" onclick="this.style.display='none'" style="cursor:pointer;">
                    <i class="material-icons left tiny">error_outline</i>@Html.Raw(TempData["ErrorMessage"])
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col s12">
            <div class="card z-depth-1">
                <div class="card-content">
                    <div class="table-title-and-actions">
                        <span class="card-title grey-text text-darken-1">
                            <i class="material-icons">list_alt</i>Danh sách yêu cầu của bạn
                        </span>
                        @* Optional: Nút tạo yêu cầu mới nếu có *@
                    </div>

                    @if (Model != null && Model.Any())
                    {
                        <div class="responsive-table-wrapper">
                            <table class="striped highlight responsive-table" id="myBookingsTable">
                                <thead>
                                    <tr>
                                        <th class="col-room">Phòng</th>
                                        <th>Loại phòng</th>
                                        <th>Khách hàng</th>
                                        <th class="col-date">Ngày nhận</th>
                                        <th class="col-date">Ngày trả</th>
                                        <th class="col-date">Ngày yêu cầu</th>
                                        <th class="center-align">Trạng thái</th>
                                        <th class="center-align actions-header">Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderByDescending(b => b.CreatedDate)) @* Sắp xếp mới nhất lên đầu *@
                                    {
                                        <tr>
                                            <td class="col-room">@item.Room?.RoomNumber</td>
                                            <td>@item.Room?.RoomType?.Name</td>
                                            <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                            <td class="col-date">@item.CheckInDate?.ToString("dd/MM/yy HH:mm")</td>
                                            <td class="col-date">@item.CheckOutDate?.ToString("dd/MM/yy HH:mm")</td>
                                            <td class="col-date">@item.CreatedDate.ToString("dd/MM/yy HH:mm")</td>
                                            <td class="center-align">
                                                @{
                                                    string statusBoxClass = "status-box-unknown";
                                                    string statusText = item.Status; // Mặc định
                                                    switch (item.Status)
                                                    {
                                                        case "Confirmed": statusBoxClass = "status-box-confirmed"; statusText = "Đã xác nhận"; break;
                                                        case "PendingApproval": statusBoxClass = "status-box-pendingapproval"; statusText = "Chờ duyệt"; break;
                                                        case "Rejected": statusBoxClass = "status-box-rejected"; statusText = "Bị từ chối"; break;
                                                        case "Cancelled": statusBoxClass = "status-box-cancelled"; statusText = "Đã hủy"; break;
                                                        case "CheckedIn": statusBoxClass = "status-box-checkedin"; statusText = "Đã nhận phòng"; break;
                                                        case "CheckedOut": statusBoxClass = "status-box-checkedout"; statusText = "Đã trả phòng"; break;
                                                        default: statusText = $"Chưa rõ ({item.Status})"; break;
                                                    }
                                                }
                                                <div class="status-box @statusBoxClass tooltipped" data-position="top" data-tooltip="@statusText">@statusText</div>
                                            </td>
                                            <td class="center-align actions-cell">
                                                @if (item.Status == "PendingApproval" || (item.Status == "Confirmed" && item.CheckInDate > DateTime.Now.AddHours(24))) // Ví dụ: Cho phép hủy trước 24h
                                                {
                                                    <form asp-action="Cancel" asp-area="Booking" method="post"
                                                          onsubmit="return confirm('Bạn có chắc chắn muốn HỦY yêu cầu/đặt phòng cho phòng @(item.Room?.RoomNumber ?? "N/A") vào ngày @item.CheckInDate?.ToString("dd/MM/yy")?');"
                                                          style="display:inline-block;">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@item.Id" />
                                                        <button type="submit" class="btn btn-small waves-effect waves-light red darken-2 tooltipped"
                                                                data-position="top" data-tooltip="Hủy yêu cầu/đặt phòng này">
                                                            <i class="material-icons left tiny">cancel</i>Hủy
                                                        </button>
                                                    </form>
                                                }
                                                else
                                                {
                                                    <span class="grey-text">--</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="flow-text grey-text center-align" style="padding:20px;">
                            <i class="material-icons left">info_outline</i>Bạn chưa có yêu cầu đặt phòng nào.
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            M.updateTextFields(); // Dù ít dùng cho trang này, giữ lại cho nhất quán
            $('.tooltipped').tooltip({ exitDelay: 50 });

            // Khởi tạo DataTables nếu có dữ liệu
            if ($('#myBookingsTable tbody tr').length > 0) {
                $('#myBookingsTable').DataTable({
                    'pageLength': 10,
                    'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, 'Tất cả']],
                    "order": [[ 5, "desc" ]], // Sắp xếp theo cột Ngày yêu cầu (index 5) giảm dần
                    "language": {
                        "lengthMenu": "Hiển thị _MENU_ mục",
                        "zeroRecords": "Không tìm thấy yêu cầu nào",
                        "info": "Hiển thị trang _PAGE_ trên _PAGES_ (_TOTAL_ mục)",
                        "infoEmpty": "Không có yêu cầu nào",
                        "infoFiltered": "(lọc từ _MAX_ tổng số mục)",
                        "search": "Tìm kiếm:",
                        "paginate": { "first": "Đầu", "last": "Cuối", "next": "Tiếp", "previous": "Trước" }
                    },
                    "columnDefs": [
                        { "orderable": false, "targets": -1 } // Cột Hành động không sắp xếp
                    ],
                    responsive: true,
                    "drawCallback": function( settings ) {
                        // Khởi tạo lại tooltip sau mỗi lần vẽ lại bảng (ví dụ khi chuyển trang)
                        $('.tooltipped').tooltip({ exitDelay: 50 });
                    },
                    "initComplete": function(settings, json) {
                        // Style cho dropdown của DataTables
                        $('#myBookingsTable_length select')
                            .css({'width':'auto', 'display': 'inline-block', 'height':'auto', 'padding':'5px'})
                            .addClass('browser-default');
                    }
                });
            }

            // Tự động ẩn thông báo TempData
             setTimeout(function() {
                $('.card-panel.teal, .card-panel.red').fadeOut('slow', function() { $(this).remove(); });
            }, 3500);
        });
    </script>
}