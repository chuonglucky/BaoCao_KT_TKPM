@model IEnumerable<ASC.Model.Models.Booking>

@{
    ViewData["Title"] = "Tất cả Lịch Đặt phòng";
    Layout = "_SecureLayout";
}

<style>
    .status-box {
        padding: 6px 8px;
        border-radius: 3px;
        color: white;
        text-align: center;
        line-height: 1.2;
        display: inline-block;
        min-width: 110px;
        font-size: 0.85em;
        font-weight: 500;
        white-space: nowrap;
    }

    .status-box-confirmed {
        background-color: #66bb6a;
    }

    .status-box-pendingapproval {
        background-color: #ffa726;
        color: #000 !important;
    }

    .status-box-rejected {
        background-color: #ef5350;
    }

    .status-box-cancelled {
        background-color: #757575;
    }

    .status-box-checkedin {
        background-color: #29b6f6;
        color: #000 !important;
    }

    .status-box-checkedout {
        background-color: #eeeeee;
        color: #424242 !important;
        border: 1px solid #bdbdbd;
    }

    .status-box-unknown {
        background-color: #9e9e9e;
    }

    .responsive-table-wrapper {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .responsive-table {
        width: 100%;
    }

        .responsive-table th,
        .responsive-table td {
            white-space: nowrap; /* Giữ nowrap cho desktop để căn chỉnh cột */
            vertical-align: middle;
        }

            .responsive-table th.actions-header,
            .responsive-table td.actions-cell {
                min-width: 120px; /* Điều chỉnh nếu cần cho nút "Trả phòng" */
                text-align: center;
            }

                .responsive-table td.actions-cell .btn,
                .responsive-table td.actions-cell .btn-floating.btn-small {
                    margin: 0 3px;
                }

    .table-title-and-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        flex-wrap: wrap;
    }

        .table-title-and-actions .card-title {
            margin: 0;
            margin-right: 10px;
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) { /* Áp dụng cho tablet và nhỏ hơn */
        .responsive-table th,
        .responsive-table td {
            white-space: normal; /* Cho phép xuống dòng trên thiết bị nhỏ */
        }

            .responsive-table td.actions-cell {
                min-width: 100px; /* Giảm nếu cần */
            }
    }

    @@media (max-width: 600px) {
        .table-title-and-actions {
            flex-direction: column;
            align-items: flex-start;
        }

            .table-title-and-actions .card-title {
                margin-bottom: 10px;
                margin-right: 0;
            }
    }
</style>

<div class="container" style="margin-top:20px; width: 95%; max-width: 1800px;">
    @* <<< THAY ĐỔI Ở ĐÂY *@
    <h4 class="blue-grey-text text-darken-2">@ViewData["Title"]</h4>
    <div class="divider"></div>

    <div class="row" style="margin-top:15px;">
        @if (TempData["Message"] != null)
        {
            <div class="col s12">
                <div class="card-panel teal lighten-2 white-text z-depth-1" onclick="this.style.display='none'" style="cursor:pointer;">
                    <i class="material-icons left tiny">check_circle</i>@Html.Raw(TempData["Message"])
                </div>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="col s12">
                <div class="card-panel red lighten-2 white-text z-depth-1" onclick="this.style.display='none'" style="cursor:pointer;">
                    <i class="material-icons left tiny">error_outline</i>@Html.Raw(TempData["ErrorMessage"])
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col s12 m12 l12">
            <div class="card z-depth-2">
                <div class="card-content">
                    <div class="table-title-and-actions">
                        <span class="card-title grey-text text-darken-1">Danh sách Lịch đặt phòng</span>
                    </div>

                    @if (Model != null && Model.Any())
                    {
                        <div class="responsive-table-wrapper">
                            <table class="striped highlight responsive-table" id="tblBookings">
                                <thead>
                                    <tr>
                                        <th>ID Booking</th>
                                        <th>Khách hàng</th>
                                        <th>Phòng</th>
                                        <th>Ngày nhận</th>
                                        <th>Ngày trả</th>
                                        <th>Ngày tạo</th>
                                        <th class="center-align">Trạng thái</th>
                                        <th>Người tạo</th>
                                        <th class="center-align actions-header">Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderByDescending(b => b.CreatedDate))
                                    {
                                        <tr>
                                            <td><small>@item.Id.ToString("D").Substring(0, 8)</small></td>
                                            <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                            <td>@item.Room?.RoomNumber (@item.Room?.RoomType?.Name)</td>
                                            <td>@item.CheckInDate?.ToString("dd/MM/yy HH:mm")</td>
                                            <td>@item.CheckOutDate?.ToString("dd/MM/yy HH:mm")</td>
                                            <td>@item.CreatedDate.ToString("dd/MM/yy HH:mm")</td>
                                            <td class="center-align">
                                                @{
                                                    string statusClass = "status-box-unknown";
                                                    string statusText = item.Status;
                                                    switch (item.Status)
                                                    {
                                                        case "Confirmed": statusClass = "status-box-confirmed"; statusText = "Đã xác nhận"; break;
                                                        case "PendingApproval": statusClass = "status-box-pendingapproval"; statusText = "Chờ duyệt"; break;
                                                        case "Rejected": statusClass = "status-box-rejected"; statusText = "Bị từ chối"; break;
                                                        case "Cancelled": statusClass = "status-box-cancelled"; statusText = "Đã hủy"; break;
                                                        case "CheckedIn": statusClass = "status-box-checkedin"; statusText = "Đã nhận phòng"; break;
                                                        case "CheckedOut": statusClass = "status-box-checkedout"; statusText = "Đã trả phòng"; break;
                                                    }
                                                }
                                                <div class="status-box @statusClass tooltipped" data-position="top" data-tooltip="@statusText">@statusText</div>
                                            </td>
                                            <td>@item.User?.UserName</td>
                                            <td class="center-align actions-cell">
                                                @if (item.Status == "Confirmed" || item.Status == "CheckedIn")
                                                {
                                                    <form asp-area="Booking" asp-controller="Booking" asp-action="CheckOut" method="post" style="display:inline-block;"
                                                          onsubmit="return confirm('Xác nhận trả phòng cho booking ID: @item.Id.ToString("D").Substring(0, 8)?');">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@item.Id" />
                                                        <button type="submit" class="btn btn-small waves-effect waves-light blue darken-2 tooltipped"
                                                                data-position="top" data-tooltip="Trả phòng">
                                                            Trả phòng
                                                        </button>
                                                    </form>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="flow-text grey-text center-align" style="padding:20px;">Không có dữ liệu đặt phòng nào để hiển thị.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            M.updateTextFields();
            $('.tooltipped').tooltip({ exitDelay: 50 });

            if ($('#tblBookings tbody tr').length > 0) {
                $('#tblBookings').DataTable({
                    'pageLength': 10,
                    'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, 'Tất cả']],
                    "language": {
                        "lengthMenu": "Hiển thị _MENU_ mục",
                        "zeroRecords": "Không tìm thấy lịch đặt phòng nào",
                        "info": "Hiển thị trang _PAGE_ trên _PAGES_ (_TOTAL_ mục)",
                        "infoEmpty": "Không có lịch đặt phòng nào",
                        "infoFiltered": "(lọc từ _MAX_ tổng số mục)",
                        "search": "Tìm kiếm:",
                        "paginate": { "first": "Đầu", "last": "Cuối", "next": "Tiếp", "previous": "Trước" }
                    },
                    "columnDefs": [ { "orderable": false, "targets": -1 } ],
                    responsive: true,
                    "drawCallback": function( settings ) { $('.tooltipped').tooltip({ exitDelay: 50 }); },
                    "initComplete": function(settings, json) {
                        $('#tblBookings_length select').css({'width':'auto', 'display': 'inline-block', 'height':'auto', 'padding':'5px'})
                                                      .addClass('browser-default');
                    }
                });
            }
            setTimeout(function() {
                $('.card-panel.teal, .card-panel.red').fadeOut('slow', function() { $(this).remove(); });
            }, 3500);
        });
    </script>
}