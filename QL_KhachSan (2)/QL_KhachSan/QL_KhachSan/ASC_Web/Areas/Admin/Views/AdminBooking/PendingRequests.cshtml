@model IEnumerable<ASC.Model.Models.Booking>

@{
    ViewData["Title"] = "Yêu cầu Đặt phòng Chờ duyệt";
    Layout = "_SecureLayout";
}

<style>
    /* Các style chung đã có */
    .status-box {
        padding: 6px 8px;
        border-radius: 3px;
        color: white;
        text-align: center;
        line-height: 1.2;
        display: inline-block;
        min-width: 110px;
        font-size: 0.85em;
        font-weight: 500;
        white-space: nowrap;
    }

    .status-box-pendingapproval {
        background-color: #ffa726;
        color: #000 !important;
    }

    .responsive-table-wrapper {
        display: block;
        width: 100%;
        overflow-x: auto;
        -webkit-overflow-scrolling: touch;
    }

    .responsive-table {
        width: 100%;
    }

        .responsive-table th,
        .responsive-table td {
            vertical-align: middle;
            padding: 10px 6px; /* Giảm padding */
            font-size: 0.88rem; /* Giảm font size */
            white-space: normal; /* Cho phép xuống dòng mặc định */
            word-break: break-word; /* Giúp ngắt từ nếu cần */
        }

            /* Cột có thể cần nowrap trên desktop nếu đủ chỗ, hoặc cần xử lý đặc biệt */
            .responsive-table th.col-date,
            .responsive-table td.col-date,
            .responsive-table th.col-room, /* Số phòng */
            .responsive-table td.col-room {
                white-space: nowrap; /* Ưu tiên không xuống dòng cho ngày tháng, số phòng */
            }

            .responsive-table th.actions-header,
            .responsive-table td.actions-cell {
                min-width: 190px; /* Đủ cho 2 nút nhỏ, có thể điều chỉnh */
                text-align: center;
                white-space: nowrap; /* Giữ các nút trên một dòng trên desktop */
            }

                .responsive-table td.actions-cell .btn {
                    margin: 0 2px; /* Giảm margin giữa các nút */
                    padding: 0 8px; /* Điều chỉnh padding của nút */
                }

                    .responsive-table td.actions-cell .btn .material-icons {
                        font-size: 1rem; /* Kích thước icon trên nút */
                        margin-right: 3px !important; /* Khoảng cách icon và text */
                        line-height: inherit; /* Căn icon với text */
                    }


    .table-title-and-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
        flex-wrap: wrap;
    }

        .table-title-and-actions .card-title {
            margin: 0;
            margin-right: 10px;
            display: flex;
            align-items: center;
            font-size: 1.4rem; /* Điều chỉnh font size tiêu đề card */
        }

            .table-title-and-actions .card-title .material-icons {
                margin-right: 8px;
                font-size: 1.7rem; /* Điều chỉnh font size icon tiêu đề card */
            }

    /* Responsive adjustments */
    @@media (max-width: 992px) { /* Tablet landscape */
        .responsive-table th.actions-header,
        .responsive-table td.actions-cell {
            min-width: 170px;
        }

        .responsive-table th, .responsive-table td {
            font-size: 0.85rem;
            padding: 8px 5px;
        }

            .responsive-table td.actions-cell .btn {
                font-size: 0.8rem;
            }
    }

    @@media (max-width: 768px) { /* Tablet portrait and phones */
        .responsive-table th.col-date, /* Cho phép ngày tháng, số phòng xuống dòng trên mobile */
        .responsive-table td.col-date,
        .responsive-table th.col-room,
        .responsive-table td.col-room {
            white-space: normal;
        }

        .responsive-table td.actions-cell {
            min-width: auto;
            white-space: normal;
        }

            .responsive-table td.actions-cell .btn {
                margin: 4px auto;
                display: block;
                width: calc(100% - 8px);
                max-width: 150px; /* Giới hạn chiều rộng nút trên mobile */
            }

            .responsive-table td.actions-cell form {
                display: block !important;
                margin-bottom: 5px;
            }

                .responsive-table td.actions-cell form:last-child {
                    margin-bottom: 0;
                }
    }

    @@media (max-width: 480px) { /* Small phones */
        .responsive-table th, .responsive-table td {
            font-size: 0.8rem; /* Font nhỏ hơn nữa cho điện thoại nhỏ */
            padding: 6px 4px;
        }

        .table-title-and-actions .card-title {
            font-size: 1.2rem;
        }

            .table-title-and-actions .card-title .material-icons {
                font-size: 1.5rem;
            }

        .responsive-table td.actions-cell .btn {
            font-size: 0.75rem;
        }

            .responsive-table td.actions-cell .btn .material-icons {
                display: none; /* Ẩn icon trên nút ở màn hình rất nhỏ để tiết kiệm không gian */
            }
    }
</style>

<div class="container" style="margin-top:20px; width: 100%; max-width: none; padding: 0 10px; box-sizing: border-box;">
    <h4 class="blue-grey-text text-darken-2">@ViewData["Title"]</h4>
    <div class="divider"></div>

    <div class="row" style="margin-top:15px;">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="col s12">
                <div class="card-panel teal lighten-2 white-text z-depth-1" onclick="this.style.display='none'" style="cursor:pointer;">
                    <i class="material-icons left tiny">check_circle</i>@Html.Raw(TempData["SuccessMessage"])
                </div>
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="col s12">
                <div class="card-panel red lighten-2 white-text z-depth-1" onclick="this.style.display='none'" style="cursor:pointer;">
                    <i class="material-icons left tiny">error_outline</i>@Html.Raw(TempData["ErrorMessage"])
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col s12 m12 l12">
            <div class="card z-depth-2">
                <div class="card-content">
                    <div class="table-title-and-actions">
                        <span class="card-title grey-text text-darken-1">
                            <i class="material-icons">hourglass_empty</i> Yêu cầu đang chờ
                        </span>
                    </div>

                    @if (Model != null && Model.Any())
                    {
                        <div class="responsive-table-wrapper">
                            <table class="striped highlight responsive-table" id="tblPendingBookings">
                                <thead>
                                    <tr>
                                        <th>Khách hàng</th>
                                        <th>Email</th>
                                        <th class="col-room">Phòng</th>
                                        <th>Loại phòng</th>
                                        <th class="col-date">Ngày nhận</th>
                                        <th class="col-date">Ngày trả</th>
                                        <th class="col-date">Ngày gửi YC</th>
                                        <th class="center-align actions-header">Hành động</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderBy(b => b.CreatedDate))
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.CustomerName)</td>
                                            <td>@(item.User?.Email ?? "N/A")</td>
                                            <td class="col-room">@(item.Room?.RoomNumber ?? "N/A")</td>
                                            <td>@(item.Room?.RoomType?.Name ?? "N/A")</td>
                                            <td class="col-date">@item.CheckInDate?.ToString("dd/MM/yy HH:mm")</td>
                                            <td class="col-date">@item.CheckOutDate?.ToString("dd/MM/yy HH:mm")</td>
                                            <td class="col-date">@item.CreatedDate.ToString("dd/MM/yy HH:mm")</td>
                                            <td class="center-align actions-cell">
                                                <form asp-action="ConfirmRequest" asp-area="Admin" asp-controller="AdminBooking" method="post" style="display:inline-block;"
                                                      onsubmit="return confirm('XÁC NHẬN yêu cầu: Khách @item.CustomerName, Phòng @(item.Room?.RoomNumber ?? "N/A")?');">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="bookingId" value="@item.Id" />
                                                    <button type="submit" class="btn btn-small waves-effect waves-light green darken-1 tooltipped"
                                                            data-position="top" data-tooltip="Xác nhận yêu cầu">
                                                        <i class="material-icons left">check</i>Xác nhận
                                                    </button>
                                                </form>
                                                <form asp-action="RejectRequest" asp-area="Admin" asp-controller="AdminBooking" method="post" style="display:inline-block;"
                                                      onsubmit="return confirm('TỪ CHỐI yêu cầu: Khách @item.CustomerName, Phòng @(item.Room?.RoomNumber ?? "N/A")?');">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="bookingId" value="@item.Id" />
                                                    <button type="submit" class="btn btn-small waves-effect waves-light red darken-1 tooltipped"
                                                            data-position="top" data-tooltip="Từ chối yêu cầu">
                                                        <i class="material-icons left">close</i>Từ chối
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <p class="flow-text grey-text center-align" style="padding:20px;">
                            <i class="material-icons left">info_outline</i> Không có yêu cầu đặt phòng nào đang chờ duyệt.
                        </p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            M.updateTextFields();
            $('.tooltipped').tooltip({ exitDelay: 50 });

            if ($('#tblPendingBookings tbody tr').length > 0) {
                $('#tblPendingBookings').DataTable({
                    'pageLength': 10,
                    'lengthMenu': [[10, 25, 50, -1], [10, 25, 50, 'Tất cả']],
                    "language": {
                        "lengthMenu": "Hiển thị _MENU_ mục",
                        "zeroRecords": "Không tìm thấy yêu cầu nào",
                        "info": "Hiển thị trang _PAGE_ trên _PAGES_ (_TOTAL_ mục)",
                        "infoEmpty": "Không có yêu cầu nào",
                        "infoFiltered": "(lọc từ _MAX_ tổng số mục)",
                        "search": "Tìm kiếm:",
                        "paginate": { "first": "Đầu", "last": "Cuối", "next": "Tiếp", "previous": "Trước" }
                    },
                    "columnDefs": [ { "orderable": false, "targets": -1 } ],
                    responsive: true, // Bật responsive của DataTables
                    "drawCallback": function( settings ) { $('.tooltipped').tooltip({ exitDelay: 50 }); },
                    "initComplete": function(settings, json) {
                        $('#tblPendingBookings_length select').css({'width':'auto', 'display': 'inline-block', 'height':'auto', 'padding':'5px'})
                                                              .addClass('browser-default');
                    }
                });
            }
            setTimeout(function() {
                $('.card-panel.teal, .card-panel.red').fadeOut('slow', function() { $(this).remove(); });
            }, 3500);
        });
    </script>
}